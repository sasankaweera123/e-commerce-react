{"version":3,"file":"static/js/79.8249e843.chunk.js","mappings":"qMAMA,MAAMA,UAAoBC,EAAAA,UAEtBC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAQjBE,aAAgBC,IACZC,KAAKC,SAAS,CACV,CAACF,EAAEG,OAAOC,MAAOJ,EAAEG,OAAOE,OAC5B,EACL,KAEDC,aAAgBN,IACZA,EAAEO,iBAEFC,EAAAA,EAAMC,KAAKC,EAAAA,EAAaC,iBAAkBV,KAAKW,OAC1CC,MAAKC,IACFC,QAAQC,IAAIF,EAAS,IAExBG,OAAMC,IACHH,QAAQC,IAAIE,EAAM,IAE1BH,QAAQC,IAAIf,KAAKW,OACjBO,MAAM,kBACNlB,KAAKC,SAAS,CACVE,KAAM,GACNgB,MAAO,GACPC,QAAS,IACX,EA7BFpB,KAAKW,MAAQ,CACTR,KAAM,GACNgB,MAAO,GACPC,QAAS,GAEjB,CA2BAC,MAAAA,GACI,MAAM,KAAClB,EAAI,MAAEgB,EAAK,QAAEC,GAAWpB,KAAKW,MAEpC,OACIW,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUzB,KAAKK,aAAcqB,UAAU,kBAAiBH,SAAA,EAC1DC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,OAAMJ,SAAC,UACtBD,EAAAA,EAAAA,KAAA,SAAOM,GAAG,OAAOC,KAAK,OAAO1B,KAAK,OAAOC,MAAOD,EAAM2B,SAAU9B,KAAKF,mBAEzE0B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,QAAOJ,SAAC,WACvBD,EAAAA,EAAAA,KAAA,SAAOM,GAAG,QAAQC,KAAK,QAAQ1B,KAAK,QAAQC,MAAOe,EAAOW,SAAU9B,KAAKF,mBAE7E0B,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBD,EAAAA,EAAAA,KAAA,SAAOK,QAAQ,UAASJ,SAAC,aACzBD,EAAAA,EAAAA,KAAA,YAAUM,GAAG,UAAUzB,KAAK,UAAUC,MAAOgB,EAASU,SAAU9B,KAAKF,mBAEzEwB,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACF,KAAK,SAAQN,SAAC,iBAK1C,EAIJ,UCzDA,QATA,WACI,OACIC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACvBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBACJD,EAAAA,EAAAA,KAAC7B,EAAW,MAGxB,C,gGCJA,MAAMsC,EAAsBC,EAAAA,YAAiB,CAAAC,EAS1CC,KAAQ,IATmC,GAC5CC,EAAE,SACFC,EAAQ,QACRC,EAAU,UAAS,KACnBC,EAAI,OACJC,GAAS,EAAK,SACdC,GAAW,EAAK,UAChBd,KACG9B,GACJqC,EACC,MAAMQ,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,QACrCO,GAAa,QAClBC,KACGC,EAAAA,EAAAA,IAAe,CAClBD,QAAST,EACTK,cACG5C,IAECF,EAAYkD,EAClB,OAAoBtB,EAAAA,EAAAA,KAAK5B,EAAW,IAC/BiD,KACA/C,EACHsC,IAAKA,EACLM,SAAUA,EACVd,UAAWoB,IAAWpB,EAAWe,EAAQF,GAAU,SAAUF,GAAW,GAAJU,OAAON,EAAM,KAAAM,OAAIV,GAAWC,GAAQ,GAAJS,OAAON,EAAM,KAAAM,OAAIT,GAAQ1C,EAAMoD,MAAQR,GAAY,aACvJ,IAEJT,EAAOkB,YAAc,SACrB,S","sources":["components/ProjectForm/ContactForm.js","pages/customer/ContactUsPage/ContactUsPage.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport './ProjectForm.css';\r\nimport {ResourcePath} from \"../../constants/ResourcePath\";\r\n\r\nclass ContactForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // fake post request\r\n        axios.post(ResourcePath.GET_ALL_PRODUCTS, this.state)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        console.log(this.state);\r\n        alert('Form submitted');\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            message: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, email, message} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className=\"contact-us-form\">\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input id=\"name\" type=\"text\" name=\"name\" value={name} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input id=\"email\" type=\"email\" name=\"email\" value={email} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <label htmlFor=\"message\">Message</label>\r\n                        <textarea id=\"message\" name=\"message\" value={message} onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContactForm;","import React from \"react\";\r\nimport ContactForm from \"../../../components/ProjectForm/ContactForm\";\r\nimport './ContactUsPage.css';\r\n\r\nfunction ContactUsPage() {\r\n    return (\r\n        <div className=\"contact-us\">\r\n            <h1>Contact Us</h1>\r\n            <ContactForm/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactUsPage;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["ContactForm","Component","constructor","props","super","handleChange","e","this","setState","target","name","value","handleSubmit","preventDefault","axios","post","ResourcePath","GET_ALL_PRODUCTS","state","then","response","console","log","catch","error","alert","email","message","render","_jsx","children","_jsxs","onSubmit","className","htmlFor","id","type","onChange","Button","React","_ref","ref","as","bsPrefix","variant","size","active","disabled","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","classNames","concat","href","displayName"],"sourceRoot":""}