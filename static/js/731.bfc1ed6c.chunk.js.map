{"version":3,"file":"static/js/731.bfc1ed6c.chunk.js","mappings":"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","sources":["components/admin/ProductOrder/ProductOrder.js","pages/admin/AdminProducts/AdminProducts.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport {ShopContext} from \"../../../context/ShopContext\";\r\nimport {AdminContext} from \"../../../context/AdminContext\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport {ResourcePath} from \"../../../constants/ResourcePath\";\r\n\r\nconst AdminProducts = () => {\r\n    const {products} = useContext(ShopContext);\r\n    const {users, productOrders} = useContext(AdminContext);\r\n\r\n    const orderStatus = [\"Order Placed\", \"Order Confirmed\", \"Order Shipped\", \"Order Delivered\", \"Order Cancelled\"];\r\n\r\n    const [orderEditProduct, setOrderEditProduct] = useState({\r\n        productId: '',\r\n        userId: '',\r\n        status: ''\r\n    });\r\n\r\n    const formatOrderDate = (date) => {\r\n        return new Date(date).toLocaleDateString();\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setOrderEditProduct({\r\n            ...orderEditProduct,\r\n            status: e.target.value\r\n        });\r\n    }\r\n\r\n    const handleEdit = (id) => {\r\n        axios.put(ResourcePath.UPDATE_PRODUCT, orderEditProduct)\r\n            .then(response => {\r\n                console.log(response);\r\n                alert('Order status updated');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const calculateTotalPrice = (order) => {\r\n        let totalPrice = 0;\r\n        order.products.forEach((product) => {\r\n            const productInfo = products.find((p) => p.id === product.productId);\r\n            if (productInfo) {\r\n                totalPrice += product.quantity * productInfo.price;\r\n            }\r\n        });\r\n        return totalPrice;\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"product-orders\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>User Name</th>\r\n                        <th>Product Name</th>\r\n                        <th>Product Quantity</th>\r\n                        <th>Total Price</th>\r\n                        <th>Order Date</th>\r\n                        <th>Order Status</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {productOrders.map((e) => {\r\n                        return (\r\n                            <tr key={e.id}>\r\n                                <td>{users.find(user => user.id === e.userId).name}</td>\r\n                                <td>\r\n                                    <ul>\r\n                                        {e.products.map((product) => {\r\n                                            const productInfo = products.find(\r\n                                                (p) => p.id === product.productId\r\n                                            );\r\n                                            return (\r\n                                                <li key={product.productId}>\r\n                                                    {productInfo ? productInfo.title : \"Unknown Product\"}\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </td>\r\n                                <td>\r\n                                    <ul>\r\n                                        {e.products.map((product) => (\r\n                                            <li key={product.productId}>{product.quantity}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </td>\r\n                                <td>${calculateTotalPrice(e)}</td>\r\n                                <td>{formatOrderDate(e.date)}</td>\r\n                                <td>\r\n                                    <select onChange={handleChange}>\r\n                                        {orderStatus.map((status) => {\r\n                                            return (\r\n                                                <option key={status} value={status}>{status}</option>\r\n                                            );\r\n                                        })}\r\n                                    </select>\r\n                                    <Button onClick={() => handleEdit(e.id)}>Update</Button>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminProducts;","import React, {useContext} from \"react\";\r\nimport ProductOrder from \"../../../components/admin/ProductOrder/ProductOrder\";\r\nimport {AdminContext} from \"../../../context/AdminContext\";\r\nimport \"../../pages.css\";\r\nconst AdminProducts = () => {\r\n\r\n    const {isAdmin} = useContext(AdminContext);\r\n\r\n    return (\r\n        <div className={!isAdmin?\"admin-pages\":\"\"}>\r\n            <h1>Admin Products</h1>\r\n            <ProductOrder/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminProducts;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["AdminProducts","products","useContext","ShopContext","users","productOrders","AdminContext","orderStatus","orderEditProduct","setOrderEditProduct","useState","productId","userId","status","handleChange","e","target","value","calculateTotalPrice","order","totalPrice","forEach","product","productInfo","find","p","id","quantity","price","_jsx","className","children","_jsxs","Table","striped","bordered","hover","map","user","name","title","date","Date","toLocaleDateString","onChange","Button","onClick","axios","put","ResourcePath","UPDATE_PRODUCT","then","response","console","log","alert","catch","error","isAdmin","ProductOrder","React","_ref","ref","as","bsPrefix","variant","size","active","disabled","props","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","classNames","concat","href","displayName","borderless","responsive","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}